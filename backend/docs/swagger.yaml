definitions:
  models.CommonResponse:
    properties:
      data: {}
      encrypted_data: {}
      error:
        type: boolean
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  models.RequestAuthLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.RequestCreateUser:
    properties:
      level:
        type: integer
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.RequestUpdateUser:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  models.ResponseAuthLogin:
    properties:
      access_token:
        type: string
      expired_at:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
  models.ResponseCreateUser:
    properties:
      id_user:
        type: integer
      level:
        type: integer
      name:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Register a login in the system
      parameters:
      - description: Login creation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RequestAuthLogin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseAuthLogin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CommonResponse'
      summary: Create login
      tags:
      - Login
  /v1/user:
    post:
      consumes:
      - application/json
      description: Register a new user in the system
      parameters:
      - description: User creation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RequestCreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseCreateUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CommonResponse'
      summary: Create a new user
      tags:
      - User
  /v1/user/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete a user from the system
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CommonResponse'
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update data user in the system
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: User update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RequestUpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CommonResponse'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - User
  /v1/user/search:
    get:
      consumes:
      - application/json
      description: Search in the system
      parameters:
      - description: query
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseCreateUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.CommonResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CommonResponse'
      security:
      - BearerAuth: []
      summary: Search
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
